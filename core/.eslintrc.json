{
    "root": true,
    "env": {
        // "commonjs": true,
        "es2021": true,
        "node": true
    },
    "extends": [
        "eslint:recommended"
    ],
    "plugins": [
        "prefer-arrow"
    ],
    "rules": {
        "indent": ["error", 4],
        "quotes": ["error", "double"],
        "semi": ["error", "always"],
        "no-multiple-empty-lines": ["error", { "max": 2 }],
        "comma-dangle": ["error", "always-multiline"],
        "object-curly-spacing": ["error", "always"],
        "array-element-newline": ["error", "consistent"],
        "array-bracket-newline": ["error", { "multiline": true }],
        "no-unused-vars": ["error", { "args": "none" }],
        "comma-spacing": ["error", { "before": false, "after": true }],
        "arrow-spacing": "error",
        "no-constant-condition": ["error", { "checkLoops": false }],
        "key-spacing": ["error", { "beforeColon": false }],
        "space-unary-ops": ["error", {"words": true, "nonwords": false}],
        "space-infix-ops": ["error", { "int32Hint": false }],
        "space-before-function-paren": ["error", {"asyncArrow": "always", "named": "never"}],
        "block-spacing": "error",
        "nonblock-statement-body-position": ["error", "beside"],
        "no-multi-spaces": ["error", { "ignoreEOLComments": true }],
        "no-trailing-spaces": "error",
        "eol-last": ["error", "always"],
        "no-sequences": "error",
        "no-implicit-coercion": "error",
        "keyword-spacing": "error"
    },
    "ignorePatterns": ["/dist/*"],
    "overrides": [
        {
            "files": ["*.ts"],
            "excludedFiles": ["*.d.ts"],
            "extends": [
                "eslint:recommended",
                "plugin:@typescript-eslint/recommended"
            ],
            "plugins": [
                "@typescript-eslint",
                "prefer-arrow",
                "eslint-plugin-tsdoc"
            ],
            "parser": "@typescript-eslint/parser",
            "parserOptions": {
                "project": "./tsconfig.json",
                "ecmaVersion": 12
            },
            "rules": {
                "@typescript-eslint/no-misused-promises": ["error", { "checksVoidReturn": false }],
                "@typescript-eslint/type-annotation-spacing": "error",
                "tsdoc/syntax": "warn"
            }
        },
        {
            "files": ["*.tsx"],
            "extends": [
                "eslint:recommended",
                "plugin:@typescript-eslint/recommended",
                "plugin:react/recommended"
            ],
            "plugins": [
                "@typescript-eslint",
                "prefer-arrow",
                "eslint-plugin-tsdoc",
                "react",
                "react-hooks"
            ],
            "parser": "@typescript-eslint/parser",
            "parserOptions": {
                "project": "./tsconfig.json",
                "ecmaVersion": 12
            },
            "rules": {
                "@typescript-eslint/no-misused-promises": ["error", { "checksVoidReturn": false }],
                "@typescript-eslint/type-annotation-spacing": "error",
                "tsdoc/syntax": "warn",
                "react-hooks/rules-of-hooks": "error",
                "react-hooks/exhaustive-deps": "warn",
                "react/jsx-no-target-blank": ["error", { "enforceDynamicLinks": "always" }],
                "react/prop-types": ["error", { "ignore": ["children"], "skipUndeclared": true }]
            }
        },
        {
            "files": ["*.d.ts"],
            "extends": [
                "eslint:recommended",
                "plugin:@typescript-eslint/recommended"
            ],
            "plugins": [
                "@typescript-eslint",
                "prefer-arrow"
            ],
            "parser": "@typescript-eslint/parser",
            "parserOptions": {
                "project": "./tsconfig.json",
                "ecmaVersion": 12
            },
            "rules": {
                "@typescript-eslint/no-misused-promises": ["error", { "checksVoidReturn": false }],
                "@typescript-eslint/type-annotation-spacing": "error"
            }
        }
    ]
}
